#iota
PUSH BP
MOV BP, SP
ADD SP, 0
MOV R0, [4133]
MOV R1, 1
ADD R0, R1
MOV [4133], R0
MOV R0, [4133]
MOV R1, BP
SUB R1, 2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV SP, BP
POP BP
RET
#inititalize_token_values
PUSH BP
MOV BP, SP
ADD SP, 0
MOV R0, 0
MOV [4133], R0
PUSH R0
CALL iota
POP R0
MOV [4096], R0
PUSH R0
CALL iota
POP R0
MOV [4097], R0
PUSH R0
CALL iota
POP R0
MOV [4098], R0
PUSH R0
CALL iota
POP R0
MOV [4099], R0
PUSH R0
CALL iota
POP R0
MOV [4100], R0
PUSH R0
CALL iota
POP R0
MOV [4101], R0
PUSH R0
CALL iota
POP R0
MOV [4102], R0
PUSH R0
CALL iota
POP R0
MOV [4103], R0
PUSH R0
CALL iota
POP R0
MOV [4104], R0
PUSH R0
CALL iota
POP R0
MOV [4105], R0
PUSH R0
CALL iota
POP R0
MOV [4106], R0
PUSH R0
CALL iota
POP R0
MOV [4107], R0
PUSH R0
CALL iota
POP R0
MOV [4108], R0
PUSH R0
CALL iota
POP R0
MOV [4109], R0
PUSH R0
CALL iota
POP R0
MOV [4110], R0
PUSH R0
CALL iota
POP R0
MOV [4111], R0
PUSH R0
CALL iota
POP R0
MOV [4112], R0
PUSH R0
CALL iota
POP R0
MOV [4113], R0
PUSH R0
CALL iota
POP R0
MOV [4114], R0
PUSH R0
CALL iota
POP R0
MOV [4115], R0
PUSH R0
CALL iota
POP R0
MOV [4116], R0
PUSH R0
CALL iota
POP R0
MOV [4117], R0
PUSH R0
CALL iota
POP R0
MOV [4118], R0
PUSH R0
CALL iota
POP R0
MOV [4119], R0
PUSH R0
CALL iota
POP R0
MOV [4120], R0
PUSH R0
CALL iota
POP R0
MOV [4121], R0
PUSH R0
CALL iota
POP R0
MOV [4122], R0
PUSH R0
CALL iota
POP R0
MOV [4123], R0
PUSH R0
CALL iota
POP R0
MOV [4124], R0
PUSH R0
CALL iota
POP R0
MOV [4125], R0
PUSH R0
CALL iota
POP R0
MOV [4126], R0
PUSH R0
CALL iota
POP R0
MOV [4127], R0
PUSH R0
CALL iota
POP R0
MOV [4128], R0
PUSH R0
CALL iota
POP R0
MOV [4129], R0
PUSH R0
CALL iota
POP R0
MOV [4130], R0
PUSH R0
CALL iota
POP R0
MOV [4131], R0
PUSH R0
CALL iota
POP R0
MOV [4132], R0
MOV SP, BP
POP BP
RET
#token_to_str
PUSH BP
MOV BP, SP
ADD SP, 1
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4096]
EQ R0, R1
JZ R0, L0
MOV R1, "int_literal"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L1
L0:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4097]
EQ R0, R1
JZ R0, L2
MOV R1, "str_literal"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L3
L2:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4098]
EQ R0, R1
JZ R0, L4
MOV R1, "identifier"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L5
L4:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4099]
EQ R0, R1
JZ R0, L6
MOV R1, "int"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L7
L6:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4100]
EQ R0, R1
JZ R0, L8
MOV R1, "str"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L9
L8:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4101]
EQ R0, R1
JZ R0, L10
MOV R1, "decl"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L11
L10:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4102]
EQ R0, R1
JZ R0, L12
MOV R1, "enddecl"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L13
L12:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4103]
EQ R0, R1
JZ R0, L14
MOV R1, "begin"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L15
L14:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4104]
EQ R0, R1
JZ R0, L16
MOV R1, "end"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L17
L16:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4105]
EQ R0, R1
JZ R0, L18
MOV R1, "read"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L19
L18:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4106]
EQ R0, R1
JZ R0, L20
MOV R1, "write"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L21
L20:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4107]
EQ R0, R1
JZ R0, L22
MOV R1, "if"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L23
L22:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4108]
EQ R0, R1
JZ R0, L24
MOV R1, "then"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L25
L24:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4109]
EQ R0, R1
JZ R0, L26
MOV R1, "else"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L27
L26:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4110]
EQ R0, R1
JZ R0, L28
MOV R1, "elif"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L29
L28:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4111]
EQ R0, R1
JZ R0, L30
MOV R1, "endif"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L31
L30:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4112]
EQ R0, R1
JZ R0, L32
MOV R1, "while"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L33
L32:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4113]
EQ R0, R1
JZ R0, L34
MOV R1, "do"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L35
L34:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4114]
EQ R0, R1
JZ R0, L36
MOV R1, "endwhile"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L37
L36:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4115]
EQ R0, R1
JZ R0, L38
MOV R1, "break"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L39
L38:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4116]
EQ R0, R1
JZ R0, L40
MOV R1, "continue"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L41
L40:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4117]
EQ R0, R1
JZ R0, L42
MOV R1, "return"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L43
L42:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4118]
EQ R0, R1
JZ R0, L44
MOV R1, "and"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L45
L44:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4119]
EQ R0, R1
JZ R0, L46
MOV R1, "or"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L47
L46:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4120]
EQ R0, R1
JZ R0, L48
MOV R1, "lt"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L49
L48:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4121]
EQ R0, R1
JZ R0, L50
MOV R1, "gt"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L51
L50:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4122]
EQ R0, R1
JZ R0, L52
MOV R1, "lt_eq"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L53
L52:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4123]
EQ R0, R1
JZ R0, L54
MOV R1, "gt_eq"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L55
L54:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4124]
EQ R0, R1
JZ R0, L56
MOV R1, "equal_eq"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L57
L56:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4125]
EQ R0, R1
JZ R0, L58
MOV R1, "not_eq"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L59
L58:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4126]
EQ R0, R1
JZ R0, L60
MOV R1, "eq"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L61
L60:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4127]
EQ R0, R1
JZ R0, L62
MOV R1, "plus"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L63
L62:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4128]
EQ R0, R1
JZ R0, L64
MOV R1, "minus"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L65
L64:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4129]
EQ R0, R1
JZ R0, L66
MOV R1, "mul"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L67
L66:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4130]
EQ R0, R1
JZ R0, L68
MOV R1, "div"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L69
L68:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4131]
EQ R0, R1
JZ R0, L70
MOV R1, "mod"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L71
L70:
MOV R1, BP
ADD R1, -3
MOV R0, [R1]
MOV R1, [4132]
EQ R0, R1
JZ R0, L72
MOV R1, "addr_of"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L73
L72:
MOV R1, "unkown_token"
MOV R0, BP
ADD R0, 1
MOV [R0], R1
L73:
L71:
L69:
L67:
L65:
L63:
L61:
L59:
L57:
L55:
L53:
L51:
L49:
L47:
L45:
L43:
L41:
L39:
L37:
L35:
L33:
L31:
L29:
L27:
L25:
L23:
L21:
L19:
L17:
L15:
L13:
L11:
L9:
L7:
L5:
L3:
L1:
MOV R1, BP
ADD R1, 1
MOV R0, [R1]
MOV R1, BP
SUB R1, 2
MOV [R1], R0
MOV SP, BP
POP BP
RET
MOV SP, BP
POP BP
RET
#main
PUSH BP
MOV BP, SP
ADD SP, 2
PUSH R0
PUSH R0
CALL inititalize_token_values
POP R1
POP R0
MOV R0, BP
ADD R0, 2
MOV [R0], R1
MOV R0, [4133]

MOV R1, "Write"
PUSH R1
MOV R1, -2
PUSH R1
PUSH R0
PUSH R1
PUSH R1
CALL 0
POP R1
POP R1
POP R1
POP R1
POP R1

MOV R1, 1
MOV R0, BP
ADD R0, 1
MOV [R0], R1
L74:
MOV R1, BP
ADD R1, 1
MOV R0, [R1]
MOV R1, [4133]
LE R0, R1
JZ R0, L75
MOV R1, BP
ADD R1, 1
MOV R0, [R1]
PUSH R0
PUSH R0
CALL token_to_str
POP R0
POP R1

MOV R1, "Write"
PUSH R1
MOV R1, -2
PUSH R1
PUSH R0
PUSH R1
PUSH R1
CALL 0
POP R1
POP R1
POP R1
POP R1
POP R1

MOV R2, BP
ADD R2, 1
MOV R1, [R2]
MOV R2, 1
ADD R1, R2
MOV R0, BP
ADD R0, 1
MOV [R0], R1
JMP L74
L75:
MOV SP, BP
POP BP
RET
$38
